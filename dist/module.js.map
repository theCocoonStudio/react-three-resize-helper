{"mappings":"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","sources":["src/index.js","src/components/ResizeHelper.js"],"sourcesContent":["import { useResizeHelper } from \"./components/ResizeHelper\";\nexports.useResizeHelper = useResizeHelper;\n","import { useEffect, useState } from \"react\";\nimport { Box3, MathUtils } from \"three\";\n\nconst handleResize = (ref, options, camera) => {\n  const _ref = ref;\n  const _options = options;\n  const _camera = camera;\n  //calculate returned objected\n  const _size = new Box3().setFromObject(_ref.current);\n  const _vFOV = MathUtils.degToRad(_camera.fov);\n  const _height =\n    2 *\n    Math.tan(_vFOV / 2) *\n    Math.abs(_ref.current.position.z - _camera.position.z); // visible height\n  const _width = _height * _camera.aspect;\n  const _returned = {\n    objMin: _size.min,\n    objMax: _size.max,\n    visWidth: _width,\n    visHeight: _height,\n  };\n\n  const { _aspect } = _camera;\n  if (_options) {\n    let { breakpoints, positions, rotations, scales, fovs, camZs, useMin } =\n      _options;\n\n    //basic validation\n    if (!Array.isArray(breakpoints)) {\n      throw new TypeError(\n        \"Options requires a breakpoints key referencing a breakpoint array. \",\n        \"ResizeHelper.js\",\n        11,\n      );\n    }\n    if (positions && !Array.isArray(positions)) {\n      throw new TypeError(\n        \"Optional positions key must reference an array.\",\n        \"ResizeHelper.js\",\n        18,\n      );\n    }\n    if (rotations && !Array.isArray(rotations)) {\n      throw new TypeError(\n        \"Optional rotations key must reference an array.\",\n        \"ResizeHelper.js\",\n        25,\n      );\n    }\n    if (scales && !Array.isArray(scales)) {\n      throw new TypeError(\n        \"Optional scales key must reference an array.\",\n        \"ResizeHelper.js\",\n        32,\n      );\n    }\n    if (fovs && !Array.isArray(fovs)) {\n      throw new TypeError(\n        \"Optional fovs key must reference an array.\",\n        \"ResizeHelper.js\",\n        39,\n      );\n    }\n    if (camZs && !Array.isArray(camZs)) {\n      throw new TypeError(\n        \"Optional camZs key must reference an array.\",\n        \"ResizeHelper.js\",\n        46,\n      );\n    }\n    /*insert current _aspect in the sorted breakpoint array*/\n    breakpoints.push(_aspect);\n    breakpoints.sort();\n    const index = breakpoints.indexOf(_aspect);\n\n    /* find the array index for the changes to implement */\n    let actionIndex;\n    //if usemin, if index is 0, _aspect is below lowest min breakpoint\n    if (useMin && index > 0) {\n      //apply changes at index - 1 breakpoint unless current _aspect is equal to next breakpoint, in which case we must apply changes at index.\n      // e.g. [1, 2, _aspect = 2.5, 2.5, 3]\n      actionIndex =\n        breakpoints[index] === breakpoints[index + 1] ? index : index - 1;\n      //if !usemin, if index is last, _aspect is above highest max breakpoint\n    } else if (!useMin && index < breakpoints.length - 1) {\n      //apply changes at index breakpoint (not index + 1 as we pushed an element to the original array) unless current _aspect is equal to previous breakpoint, in which case we must apply the changes at index - 1\n      // e.g. [1, 2, 2.5, _aspect = 2.5, 3]\n      // shouldn't happen to due Array.indexOf() implementation returning first matching index\n      actionIndex =\n        breakpoints[index] === breakpoints[index - 1] ? index - 1 : index;\n    }\n\n    /* apply the changes */\n\n    if (positions && positions[actionIndex]) {\n      positions[actionIndex][0] &&\n        (_ref.current.position.x =\n          typeof positions[actionIndex][0] === \"function\"\n            ? positions[actionIndex][0](_returned, _options.functionScope)\n            : positions[actionIndex][0]);\n      positions[actionIndex][1] &&\n        (_ref.current.position.y =\n          typeof positions[actionIndex][1] === \"function\"\n            ? positions[actionIndex][1](_returned, _options.functionScope)\n            : positions[actionIndex][1]);\n      positions[actionIndex][2] &&\n        (_ref.current.position.z =\n          typeof positions[actionIndex][2] === \"function\"\n            ? positions[actionIndex][2](_returned, _options.functionScope)\n            : positions[actionIndex][2]);\n    }\n\n    if (rotations && rotations[actionIndex]) {\n      rotations[actionIndex][0] &&\n        (_ref.current.position.x =\n          typeof rotations[actionIndex][0] === \"function\"\n            ? rotations[actionIndex][0](_returned, _options.functionScope)\n            : rotations[actionIndex][0]);\n      rotations[actionIndex][1] &&\n        (_ref.current.position.y =\n          typeof rotations[actionIndex][1] === \"function\"\n            ? rotations[actionIndex][1](_returned, _options.functionScope)\n            : rotations[actionIndex][1]);\n      rotations[actionIndex][2] &&\n        (_ref.current.position.z =\n          typeof rotations[actionIndex][2] === \"function\"\n            ? rotations[actionIndex][2](_returned, _options.functionScope)\n            : rotations[actionIndex][2]);\n    }\n\n    if (scales && scales[actionIndex]) {\n      scales[actionIndex][0] &&\n        (_ref.current.scale.x =\n          typeof scales[actionIndex][0] === \"function\"\n            ? scales[actionIndex][0](_returned, _options.functionScope)\n            : scales[actionIndex][0]);\n      scales[actionIndex][1] &&\n        (_ref.current.scale.y =\n          typeof scales[actionIndex][1] === \"function\"\n            ? scales[actionIndex][1](_returned, _options.functionScope)\n            : scales[actionIndex][1]);\n      scales[actionIndex][2] &&\n        (_ref.current.scale.z =\n          typeof scales[actionIndex][2] === \"function\"\n            ? scales[actionIndex][2](_returned, _options.functionScope)\n            : scales[actionIndex][2]);\n    }\n    if (fovs && fovs[actionIndex]) {\n      _camera.fov =\n        typeof fovs[actionIndex] === \"function\"\n          ? fovs[actionIndex](_returned, _options.functionScope)\n          : fovs[actionIndex];\n      _camera.updateProjectionMatrix();\n    }\n    if (camZs && camZs[actionIndex]) {\n      _camera.position.z =\n        typeof camZs[actionIndex] === \"function\"\n          ? camZs[actionIndex](_returned, _options.functionScope)\n          : camZs[actionIndex];\n      _camera.updateProjectionMatrix();\n    }\n  }\n  return _returned;\n};\n\nexport const useResizeHelper = (ref, camera, options) => {\n  let [dimensions, setDimensions] = useState(null);\n\n  useEffect(() => {\n    setDimensions(handleResize(ref, options, camera));\n  }, [camera.aspect, ref, options, camera, ref.current]);\n\n  return dimensions;\n};\n"],"names":[],"version":3,"file":"module.js.map"}